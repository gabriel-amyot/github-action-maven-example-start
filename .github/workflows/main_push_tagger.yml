name: Tagging

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine the next version number
        id: version
        run: |
          PREVIOUS_VERSION=v2.2.1
          PR_NUMBER="${{ github.event.number }}"
          PR_BRANCH="v2.2.2-dev.${PR_NUMBER}"
          echo "VERSION=${PREVIOUS_VERSION}" >> $GITHUB_ENV
          echo "PR_BRANCH=${PR_BRANCH}" >> $GITHUB_ENV
        continue-on-error: true

      - name: Tag commits in PR
        run: |
          PR_BRANCH="${{ env.PR_BRANCH }}"
          git tag $PR_BRANCH
          git push origin $PR_BRANCH
        if: success()

      - name: Merge PR and create a release tag
        if: github.event_name == 'pull_request' && github.event.action == 'closed'
        run: |
          VERSION="${{ env.VERSION }}"
          PR_BRANCH="${{ env.PR_BRANCH }}"
          if [ "$GITHUB_EVENT_PATH" != "" ]; then
            MERGED=$(jq -r .pull_request.merged $GITHUB_EVENT_PATH)
            if [ "$MERGED" = "true" ]; then
              git checkout master
              git pull
              git merge "$PR_BRANCH" --no-ff -m "Merge PR $PR_BRANCH"
              git tag -a -m "Release $VERSION" "$VERSION"
              git push origin master --tags
              git push origin --delete "$PR_BRANCH"
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
